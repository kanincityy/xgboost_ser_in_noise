[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "speech-emotion-recognition-white-noise"
authors = [{name = "Research Team", email = "research@example.com"}]
description = "A comprehensive study of speech emotion recognition robustness to white noise"
readme = "README.md"
requires-python = ">=3.8"
keywords = ["speech", "emotion", "recognition", "noise", "robustness", "machine-learning"]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9", 
    "Programming Language :: Python :: 3.10",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
]
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "xgboost>=1.5.0",
    "librosa>=0.9.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "tqdm>=4.62.0",
    "pyyaml>=6.0",
    "scikit-optimize>=0.9.0",
    "kagglehub>=0.1.0",
    "joblib>=1.1.0",
    "scipy>=1.7.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
]
gpu = ["tensorflow>=2.8.0"]
monitoring = ["psutil>=5.8.0", "tensorboard>=2.8.0"]

[project.scripts]
ser-train = "scripts.train_model:main"
ser-evaluate = "scripts.evaluate_model:main" 
ser-experiment = "scripts.run_experiment:main"

[project.urls]
Homepage = "https://github.com/username/speech-emotion-recognition-white-noise"
Documentation = "https://speech-emotion-recognition-white-noise.readthedocs.io/"
Repository = "https://github.com/username/speech-emotion-recognition-white-noise.git"
"Bug Tracker" = "https://github.com/username/speech-emotion-recognition-white-noise/issues"

[tool.setuptools_scm]
write_to = "src/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "librosa.*",
    "kagglehub.*",
    "xgboost.*",
    "skopt.*",
    "seaborn.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]